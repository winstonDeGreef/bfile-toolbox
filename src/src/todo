todo
[x] create tabs with stdout, stderr and status
[x] create statusStore that contains a textfield with status data generated by a function for each function type
[x] statusStore should have a stop button
[x] status for explicit: order should not matter
  [x] computed
  [x] length
  [x] computed sequential
  [x] output data list
[x] status for list
  [x] computed
  [x] length
[x] for list add size algorithms
  [x] linear algorithm with start and increment
  [x] preset algorithm
  [x] generate these client side and use these to provide a bettor error message in handleStdLine when two different arrays provide different values
[x] for list, output calculated each time list is finished
  [x] if values change, show user error
[x] make parisizemax and ?parisize? (probbably dont need to set this) configurable
[x] truncate bfile output
[x] edit bfiles after being created
[ ] warn if edited by user note is added but no edits have been made
 [ ] maybe more comprehensive checks?
[ ]verify against data
[ ] verify against pervious bfile
[x] add a_vector as synomym for lista
[x] fix bug that you cant edit main function input
[x] max container width
[x] bug with lista length cutoff? https://oeis.org/edit?seq=A354015
[x] stop button submits form

[ ] find bfiles with invalid type
 [ ] if it is read by rows or antidiagonals => check that it is a whole number of rows
[x] fix server error (only added a bypass)
[ ] python support
[x] lookup values of other sequences
[x] automatically save bfile
[x] rename run2 button to run

[ ] include warning whenever {{TEMPLATE}} syntax is used in user user suppliad input
[ ] add documentation in page
[ ] linear list guess algorithm will round down to 10 000 explain this to user
[ ] allow arbitrary max offset 
 [ ] (check parseCustomGuessesTextAndUpdate) validity checks
[ ] for custom guess add line error output
[ ] maybe improve customguess line diagnostics?

[ ] loop function type that gives all the controll to the fuction
[ ] check line length client side
[ ] (LANG) should be case insensitive
[ ] even if error, dont discard data
[ ] bfile warning should say if the edit is in the code generated or only effects bfile generation

[x] BEFORE PUBLISHING: put memoize client side
[ ] if server requests bfile part that doesn't exist, show user error
[ ] accordion for most sections

[ ] turn vecmap into vecapply
[ ] implement limit output properly
[ ] link line formats
 [ ] triangle
    First 141 rows of Pascal's triangle, formatted as a simple linear sequence: (n, a(n)), n=0..10152.
    T. D. Noe, Rows n = 0..100 of triangle, flattened
    T. D. Noe, First 100 rows, flattened
    Franklin T. Adams-Watters, First 200 rows, flattened
    Robert Price, Table of n, a(n) for n = 1..15008 (rows n = 1..412, flattened)
    Franklin T. Adams-Watters, Rows 1..1000, flattened
    note previous: irregular triangle
    T. D. Noe, Rows 0 to 100 of the triangle, flattened.
    N. J. A. Sloane, Table of n, a(n) for n = 1..11325
    Reinhard Zumkeller, Rows n = 1..10000 of triangle, flattened
    note previous: irregular triangle
    T. D. Noe, Rows 1 to 100 of triangle, flattened.
    <page 10>
    Andrew Howroyd, Table of n, a(n) for n = 1..1275
    G. C. Greubel, Table of n, a(n) for the first 55 rows, flattened
    David W. Wilson, Table of n, a(n) for n = 1..11731 (rows 1 through 26).
    Nathaniel Johnston, Rows 0..100, flattened

[ ] make linear guess algorithm not be hardcoded
[ ] despaghetify the run code
[ ] automatically detect if memoize should be included
[x] change default port, and make the server ws:
[ ] document default port
